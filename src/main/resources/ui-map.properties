# User Interface (UI) Map

# Patterns
# ui.element.key=locator:selector
# ui.element.key=css_containing_text:selector|text
# ui.element.key=by_all:key1|key2|keyN
# ui.element.key=by_chained:key1|key2|keyN

# Selenium Locators
# id, name, link_text, partial_link_text, tag, class, css, xpath, by_all,
# by_id_or_name, by_chained

# ngWebDriver (Protractor) Locators
# binding, model, button_text, css_containing_text, exact_binding,
# exact_repeater, options, partial_button_text, repeater

#------------------------------------------------------------------------------#

# Simply Do - Balance Projector

div.boxes=by_chained:page.div.span7|page.div.box
page.div.span7=class:span7
page.div.box=class:box

start.balance=model:startBalance

income.add=css:button[ng-click='addIncome();']
income.name=model:income.name
income.amount=model:income.amount
income.freq=model:income.frequency

expense.add=css:button[ng-click='addExpense();']
expense.name=model:expense.name
expense.amount=model:expense.amount
expense.freq=model:expense.frequency

net.per.month=binding:roundDown(monthlyNet())
net.per.year=binding:roundDown(monthlyNet()*12)+tallyTransactions()

#-----------Belong_Automation_Practice------------
#Register Scenario
email.address=id:email_create
create.account=id:SubmitCreate
page.heading=class:page-heading
error.element=id:create_account_error
#Megamenu Scenario
dresses.element=link_text:Dresses
summerdresses.element=link_text:Summer Dresses
firstsummerdress.element=link_text:Printed Summer Dress
addtocart.element=id:add_to_cart
proceedcheckout.element=xpath://a[@title='Proceed to checkout']
#Cart Scenario
header.element=id:cart_title
orderdetail.element=id:order-detail-content
productname.element=link_text:Printed Summer Dress
productcolor.element=partial_link_text:Color : Yellow
productqty.element=xpath://input[@value='1' and @type='text']
